name: Deploy

on:
  push:
    branches: ['main', 'develop']
  workflow_dispatch:

jobs:
  build:
    name: Build images
    runs-on: ubuntu-latest
    env:
      TF_WORKSPACE: ${{ github.ref == 'refs/heads/main' && 'production' || (github.ref == 'refs/heads/develop' && 'development') }}
      DB_SHA: $(git log -n 1 --format=format:%H -- ./db)
      TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
      TF_VAR_db_app_username: ${{ secrets.DB_APP_USERNAME }}
      TF_VAR_db_app_password: ${{ secrets.DB_APP_PASSWORD }}
      TF_VAR_deployer_public_key: ${{ secrets.DEPLOYER_PUBLIC_KEY }}
      TF_VAR_s3_bucket_terraform: ${{ secrets.S3_BUCKET_TERRAFORM }}
      TF_VAR_git_sha: ${{ github.sha }}
      TF_VAR_cloudflare_account_id: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      TF_VAR_cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      TF_VAR_jwt_public_key: ${{ secrets.JWT_PUBLIC_KEY }}
      TF_VAR_jwt_private_key: ${{ secrets.JWT_PRIVATE_KEY }}
      TF_VAR_ssl_cert: ${{ secrets.SSL_CERT }}
      TF_VAR_ssl_key: ${{ secrets.SSL_KEY }}
      TF_VAR_google_refresh_token: ${{ secrets.GOOGLE_REFRESH_TOKEN }}
      TF_VAR_google_credentials_web: ${{ secrets.GOOGLE_CREDENTIALS_WEB }}
      TF_VAR_google_credentials_installed: ${{ secrets.GOOGLE_CREDENTIALS_INSTALLED }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Login to Amazon ECR
        id: loginecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Server image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.loginecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:server-${{ github.sha }}
          target: server

      - name: Worker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.loginecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:worker-${{ github.sha }}
          target: worker

      - name: Migrate image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.loginecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:migrate-${{ github.sha }}
          target: migrate

      - name: Terraform
        working-directory: ./terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform init
        working-directory: ./terraformËš
        id: init
        run: terraform init -no-color

      - id: plan
        working-directory: ./terraform
        run: terraform plan -no-color

      - run: terraform apply -auto-approve -no-color
        working-directory: ./terraform